services:
  redis:
    image: redis:7-alpine
    container_name: umadex_redis
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks:
      - umadex_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: umadex_mail
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - umadex_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: umadex_backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:-}
      REDIS_URL: redis://redis:6379
      SMTP_HOST: ${SMTP_HOST:-mailhog}
      SMTP_PORT: ${SMTP_PORT:-1025}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-10080}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-7}
      OTP_EXPIRY_MINUTES: ${OTP_EXPIRY_MINUTES:-10}
      OTP_LENGTH: ${OTP_LENGTH:-6}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@umadex.local}
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - umadex_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: umadex_frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost/api}
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    volumes:
      - ./frontend:/app
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - umadex_network
    command: npm run dev

  nginx:
    image: nginx:alpine
    container_name: umadex_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - umadex_network

volumes:
  # postgres_data volume removed - using Supabase cloud database
  frontend_node_modules:

networks:
  umadex_network:
    driver: bridge